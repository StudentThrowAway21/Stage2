/*General*/


.body
{
    margin: 5px;
    font-family: "Roboto",sans-serif;
}

.pageContents
{
    display: grid;
    grid-template-columns: 1fr;
}


.navBar
{
    display: flex;
    justify-content: space-between;
    padding: 38px;
}

.navBarLeft
{
    display: flex;
}

.navBar > .navBarLeft > div
{
    margin-right: 20px;
    font-size: 0.9em; 
    text-transform: uppercase;
}

.navBarLink
{
    height: 22px;
    border-bottom: 1px solid transparent;
    transition:  border-bottom 0.5s;
}

.navBarLink a
{
    color: #8a8a8a;
    text-decoration: none;
    transition: color 0.5s;
}

.navBarLink:hover
{  
    border-bottom: 1px solid black;
}

.navBarLink:hover a
{  
    color: black;
}

.active-navBarLink
{
    border-bottom: 1px solid black;
}

.active-navBarLink a
{
    border-bottom: 1px solid black i !important;
}

/*Homepage*/
.twoColumns
{
    display: grid;
    grid-template-columns: 1fr 1fr;
}


.Frame
{
    
    top: 70px;
    left: 10px;
    width: 1000px;
    height: 600px;
    /*border: 3px solid black;*/
}

.title
{
    position: absolute;
    margin: 5px;
    text-align: center;
}

.row
{
    display: flex;
    justify-content: center;
}

.circle {
    width:10px;
    height:10px;
    border-radius:50px;
    font-size:20px;
    color:#fff;
    line-height:100px;
    
}

.col > span, .col > p {
  display: inline-block;
  padding-right: 10px;
  padding-left: 0px;
}
/*About me page*/
.profileImage img
{
    width: 100%;
    height: 100%;
}

.profileInfo
{
    padding: 30px;
}

.profileInfo h1,h2
{
    color: rgb(0, 0, 0);
}

.profileInfo p1
{
    color:rgb(170, 99, 211);
    font-weight: bold;
}



.threeColumns
{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    justify-content: center;
}

.shapeWrapper
{
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid black;
}


.shapeS
{
    animation: rotateS 2s infinite linear;
}

.opac
{
    opacity: 0.1;
}

.shapeT
{
    animation: rotateT 4s infinite linear;
    
}

@keyframes rotateS
{
    from
    {
        transform: rotateZ(360deg);
    }
    To
    {
        transform: rotateZ(0deg);
    }
}




@keyframes rotateT
{
    from
    {
        transform: rotateZ(0deg);
    }
    To
    {
        transform: rotateZ(360deg);
    }
}

.shapeC
{
    animation: rotateC 4s infinite linear;

}


@keyframes rotateC
{
    from
    {
        transform: rotateZ(0deg);
    }
    To
    {
        transform: rotateZ(360deg);
    }
}
.stop{

    animation-play-state: paused;
}
